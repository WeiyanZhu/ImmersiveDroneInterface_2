{".NET Framework 3.5":{"name":"VRTK","assembly":"Assembly-CSharp","description":"","usedBy":[{"id":"GlobalNamespace","name":"GlobalNamespace"},{"id":"VRTK.Examples","name":"VRTK.Examples"},{"id":"VRTK.Examples.Archery","name":"VRTK.Examples.Archery"},{"id":"VRTK.Examples.PanelMenu","name":"VRTK.Examples.PanelMenu"},{"id":"VRTK.Examples.Tests","name":"VRTK.Examples.Tests"},{"id":"VRTK.Examples.Utilities","name":"VRTK.Examples.Utilities"},{"id":"VRTK.GrabAttachMechanics","name":"VRTK.GrabAttachMechanics"},{"id":"VRTK.Highlighters","name":"VRTK.Highlighters"},{"id":"VRTK.SecondaryControllerGrabActions","name":"VRTK.SecondaryControllerGrabActions"}],"uses":[{"id":"GlobalNamespace","name":"GlobalNamespace"},{"id":"VRTK.GrabAttachMechanics","name":"VRTK.GrabAttachMechanics"},{"id":"VRTK.Highlighters","name":"VRTK.Highlighters"},{"id":"VRTK.SecondaryControllerGrabActions","name":"VRTK.SecondaryControllerGrabActions"}],"types":[{"id":"VRTK.Bezier","kind":"class","accessibility":"public","name":"Bezier","summary":""},{"id":"VRTK.BodyPhysicsEventArgs","kind":"struct","accessibility":"public","name":"BodyPhysicsEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.BodyPhysicsEventHandler","kind":"delegate","accessibility":"public","name":"BodyPhysicsEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.Button3DEventHandler","kind":"delegate","accessibility":"public","name":"Button3DEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.CollisionTrackerEventArgs","kind":"struct","accessibility":"public","name":"CollisionTrackerEventArgs","summary":""},{"id":"VRTK.CollisionTrackerEventHandler","kind":"delegate","accessibility":"public","name":"CollisionTrackerEventHandler","summary":""},{"id":"VRTK.Control3DEventArgs","kind":"struct","accessibility":"public","name":"Control3DEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.Control3DEventHandler","kind":"delegate","accessibility":"public","name":"Control3DEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerActionsEventArgs","kind":"struct","accessibility":"public","name":"ControllerActionsEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerActionsEventHandler","kind":"delegate","accessibility":"public","name":"ControllerActionsEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerInteractionEventArgs","kind":"struct","accessibility":"public","name":"ControllerInteractionEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerInteractionEventHandler","kind":"delegate","accessibility":"public","name":"ControllerInteractionEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerRigidbodyActivatorEventArgs","kind":"struct","accessibility":"public","name":"ControllerRigidbodyActivatorEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerRigidbodyActivatorEventHandler","kind":"delegate","accessibility":"public","name":"ControllerRigidbodyActivatorEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerTooltipsEventArgs","kind":"struct","accessibility":"public","name":"ControllerTooltipsEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ControllerTooltipsEventHandler","kind":"delegate","accessibility":"public","name":"ControllerTooltipsEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.DashTeleportEventArgs","kind":"struct","accessibility":"public","name":"DashTeleportEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.DashTeleportEventHandler","kind":"delegate","accessibility":"public","name":"DashTeleportEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.DestinationMarkerEventArgs","kind":"struct","accessibility":"public","name":"DestinationMarkerEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.DestinationMarkerEventHandler","kind":"delegate","accessibility":"public","name":"DestinationMarkerEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.DestinationPointEventHandler","kind":"delegate","accessibility":"public","name":"DestinationPointEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.HapticPulseEventHandler","kind":"delegate","accessibility":"public","name":"HapticPulseEventHandler","summary":""},{"id":"VRTK.HeadsetCollisionEventArgs","kind":"struct","accessibility":"public","name":"HeadsetCollisionEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.HeadsetCollisionEventHandler","kind":"delegate","accessibility":"public","name":"HeadsetCollisionEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.HeadsetControllerAwareEventArgs","kind":"struct","accessibility":"public","name":"HeadsetControllerAwareEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.HeadsetControllerAwareEventHandler","kind":"delegate","accessibility":"public","name":"HeadsetControllerAwareEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.HeadsetFadeEventArgs","kind":"struct","accessibility":"public","name":"HeadsetFadeEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.HeadsetFadeEventHandler","kind":"delegate","accessibility":"public","name":"HeadsetFadeEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.InteractableObjectEventArgs","kind":"struct","accessibility":"public","name":"InteractableObjectEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.InteractableObjectEventHandler","kind":"delegate","accessibility":"public","name":"InteractableObjectEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.InteractControllerAppearanceEventArgs","kind":"struct","accessibility":"public","name":"InteractControllerAppearanceEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.InteractControllerAppearanceEventHandler","kind":"delegate","accessibility":"public","name":"InteractControllerAppearanceEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.InteractHapticsEventArgs","kind":"struct","accessibility":"public","name":"InteractHapticsEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.InteractHapticsEventHandler","kind":"delegate","accessibility":"public","name":"InteractHapticsEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectAutoGrabEventHandler","kind":"delegate","accessibility":"public","name":"ObjectAutoGrabEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectControlEventArgs","kind":"struct","accessibility":"public","name":"ObjectControlEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectControlEventHandler","kind":"delegate","accessibility":"public","name":"ObjectControlEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectInteractEventArgs","kind":"struct","accessibility":"public","name":"ObjectInteractEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectInteractEventHandler","kind":"delegate","accessibility":"public","name":"ObjectInteractEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectTooltipEventArgs","kind":"struct","accessibility":"public","name":"ObjectTooltipEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.ObjectTooltipEventHandler","kind":"delegate","accessibility":"public","name":"ObjectTooltipEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.PanelMenuItemControllerEventArgs","kind":"struct","accessibility":"public","name":"PanelMenuItemControllerEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.PanelMenuItemControllerEventHandler","kind":"delegate","accessibility":"public","name":"PanelMenuItemControllerEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.PlayAreaCursorEventArgs","kind":"struct","accessibility":"public","name":"PlayAreaCursorEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.PlayAreaCursorEventHandler","kind":"delegate","accessibility":"public","name":"PlayAreaCursorEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.PlayerClimbEventArgs","kind":"struct","accessibility":"public","name":"PlayerClimbEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.PlayerClimbEventHandler","kind":"delegate","accessibility":"public","name":"PlayerClimbEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.PointerDirectionIndicatorEventHandler","kind":"delegate","accessibility":"public","name":"PointerDirectionIndicatorEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.PositionRewindEventArgs","kind":"struct","accessibility":"public","name":"PositionRewindEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.PositionRewindEventHandler","kind":"delegate","accessibility":"public","name":"PositionRewindEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.RadialButtonIcon","kind":"class","accessibility":"public","name":"RadialButtonIcon","summary":""},{"id":"VRTK.SDK_Base","kind":"class","accessibility":"public","name":"SDK_Base","summary":"<p>Abstract superclass that defines that a particular class is an SDK.</p>"},{"id":"VRTK.SDK_BaseBoundaries","kind":"class","accessibility":"public","name":"SDK_BaseBoundaries","summary":"<p>The Base Boundaries SDK script provides a bridge to SDK methods that deal with the play area of SDKs that support room scale play spaces.</p>"},{"id":"VRTK.SDK_BaseController","kind":"class","accessibility":"public","name":"SDK_BaseController","summary":"<p>The Base Controller SDK script provides a bridge to SDK methods that deal with the input devices.</p>"},{"id":"VRTK.SDK_BaseHeadset","kind":"class","accessibility":"public","name":"SDK_BaseHeadset","summary":"<p>The Base Headset SDK script provides a bridge to SDK methods that deal with the VR Headset.</p>"},{"id":"VRTK.SDK_BaseSystem","kind":"class","accessibility":"public","name":"SDK_BaseSystem","summary":"<p>The Base System SDK script provides a bridge to core system SDK methods.</p>"},{"id":"VRTK.SDK_ControllerHapticModifiers","kind":"class","accessibility":"public","name":"SDK_ControllerHapticModifiers","summary":""},{"id":"VRTK.SDK_ControllerSim","kind":"class","accessibility":"public","name":"SDK_ControllerSim","summary":""},{"id":"VRTK.SDK_DaydreamBoundaries","kind":"class","accessibility":"public","name":"SDK_DaydreamBoundaries","summary":"<p>The Daydream Boundaries SDK script provides dummy functions for the play area boundaries.</p>"},{"id":"VRTK.SDK_DaydreamController","kind":"class","accessibility":"public","name":"SDK_DaydreamController","summary":"<p>The Daydream Controller SDK script provides a bridge to SDK methods that deal with the input devices.</p>"},{"id":"VRTK.SDK_DaydreamDefines","kind":"class","accessibility":"public","name":"SDK_DaydreamDefines","summary":"<p>Handles all the scripting define symbols for the Daydream SDK.</p>"},{"id":"VRTK.SDK_DaydreamHeadset","kind":"class","accessibility":"public","name":"SDK_DaydreamHeadset","summary":"<p>The Daydream Headset SDK script provides dummy functions for the headset.</p>"},{"id":"VRTK.SDK_DaydreamSystem","kind":"class","accessibility":"public","name":"SDK_DaydreamSystem","summary":"<p>The Daydream System SDK script provides dummy functions for system functions.</p>"},{"id":"VRTK.SDK_DescriptionAttribute","kind":"class","accessibility":"public","name":"SDK_DescriptionAttribute","summary":"<p>Describes a class that represents an SDK. Only allowed on classes that inherit from <a href=\"#/type/VRTK.SDK_Base/index\">SDK_Base</a>.</p>"},{"id":"VRTK.SDK_FallbackBoundaries","kind":"class","accessibility":"public","name":"SDK_FallbackBoundaries","summary":"<p>The Fallback Boundaries SDK script provides a fallback collection of methods that return null or default headset values.</p>"},{"id":"VRTK.SDK_FallbackController","kind":"class","accessibility":"public","name":"SDK_FallbackController","summary":"<p>The Fallback Controller SDK script provides a fallback collection of methods that return null or default headset values.</p>"},{"id":"VRTK.SDK_FallbackHeadset","kind":"class","accessibility":"public","name":"SDK_FallbackHeadset","summary":"<p>The Fallback Headset SDK script provides a fallback collection of methods that return null or default headset values.</p>"},{"id":"VRTK.SDK_FallbackSystem","kind":"class","accessibility":"public","name":"SDK_FallbackSystem","summary":"<p>The Fallback System SDK script provides a fallback collection of methods that return null or default system values.</p>"},{"id":"VRTK.SDK_InputSimulator","kind":"class","accessibility":"public","name":"SDK_InputSimulator","summary":"<p>The <code>VRSimulatorCameraRig</code> prefab is a mock Camera Rig set up that can be used to develop with VRTK without the need for VR Hardware.</p>"},{"id":"VRTK.SDK_OculusBoundaries","kind":"class","accessibility":"public","name":"SDK_OculusBoundaries","summary":"<p>The Oculus Boundaries SDK script provides a bridge to the Oculus SDK play area.</p>"},{"id":"VRTK.SDK_OculusController","kind":"class","accessibility":"public","name":"SDK_OculusController","summary":"<p>The Oculus Controller SDK script provides a bridge to SDK methods that deal with the input devices.</p>"},{"id":"VRTK.SDK_OculusDefines","kind":"class","accessibility":"public","name":"SDK_OculusDefines","summary":"<p>Handles all the scripting define symbols for the Oculus and Avatar SDKs.</p>"},{"id":"VRTK.SDK_OculusHeadset","kind":"class","accessibility":"public","name":"SDK_OculusHeadset","summary":"<p>The Oculus Headset SDK script provides a bridge to the Oculus SDK.</p>"},{"id":"VRTK.SDK_OculusSystem","kind":"class","accessibility":"public","name":"SDK_OculusSystem","summary":"<p>The Oculus System SDK script provides a bridge to the Oculus SDK.</p>"},{"id":"VRTK.SDK_ScriptingDefineSymbolPredicateAttribute","kind":"class","accessibility":"public","name":"SDK_ScriptingDefineSymbolPredicateAttribute","summary":"<p>Specifies a method to be used as a predicate to allow <a href=\"#/type/VRTK.VRTK_SDKManager/index\">VRTK_SDKManager</a> to automatically add and remove scripting define symbols. Only allowed on  methods that take no arguments and return .</p>"},{"id":"VRTK.SDK_SimBoundaries","kind":"class","accessibility":"public","name":"SDK_SimBoundaries","summary":"<p>The Sim Boundaries SDK script provides dummy functions for the play area boundaries.</p>"},{"id":"VRTK.SDK_SimController","kind":"class","accessibility":"public","name":"SDK_SimController","summary":"<p>The Sim Controller SDK script provides functions to help simulate VR controllers.</p>"},{"id":"VRTK.SDK_SimHeadset","kind":"class","accessibility":"public","name":"SDK_SimHeadset","summary":"<p>The Sim Headset SDK script  provides dummy functions for the headset.</p>"},{"id":"VRTK.SDK_SimSystem","kind":"class","accessibility":"public","name":"SDK_SimSystem","summary":"<p>The Sim System SDK script provides dummy functions for system functions.</p>"},{"id":"VRTK.SDK_SteamVRBoundaries","kind":"class","accessibility":"public","name":"SDK_SteamVRBoundaries","summary":"<p>The SteamVR Boundaries SDK script provides a bridge to the SteamVR SDK play area.</p>"},{"id":"VRTK.SDK_SteamVRController","kind":"class","accessibility":"public","name":"SDK_SteamVRController","summary":"<p>The SteamVR Controller SDK script provides a bridge to SDK methods that deal with the input devices.</p>"},{"id":"VRTK.SDK_SteamVRDefines","kind":"class","accessibility":"public","name":"SDK_SteamVRDefines","summary":"<p>Handles all the scripting define symbols for the SteamVR SDK.</p>"},{"id":"VRTK.SDK_SteamVRHeadset","kind":"class","accessibility":"public","name":"SDK_SteamVRHeadset","summary":"<p>The SteamVR Headset SDK script provides a bridge to the SteamVR SDK.</p>"},{"id":"VRTK.SDK_SteamVRSystem","kind":"class","accessibility":"public","name":"SDK_SteamVRSystem","summary":"<p>The SteamVR System SDK script provides a bridge to the SteamVR SDK.</p>"},{"id":"VRTK.SDK_XimmerseBoundaries","kind":"class","accessibility":"public","name":"SDK_XimmerseBoundaries","summary":"<p>The Ximmerse Boundaries SDK script provides a bridge to the Ximmerse SDK play area.</p>"},{"id":"VRTK.SDK_XimmerseController","kind":"class","accessibility":"public","name":"SDK_XimmerseController","summary":"<p>The Ximmerse Controller SDK script provides a bridge to SDK methods that deal with the input devices.</p>"},{"id":"VRTK.SDK_XimmerseDefines","kind":"class","accessibility":"public","name":"SDK_XimmerseDefines","summary":"<p>Handles all the scripting define symbols for the Ximmerse SDK.</p>"},{"id":"VRTK.SDK_XimmerseHeadset","kind":"class","accessibility":"public","name":"SDK_XimmerseHeadset","summary":"<p>The Ximmerse Headset SDK script provides a bridge to the Ximmerse SDK.</p>"},{"id":"VRTK.SDK_XimmerseSystem","kind":"class","accessibility":"public","name":"SDK_XimmerseSystem","summary":"<p>The Ximmerse System SDK script provides a bridge to the Ximmerse SDK.</p>"},{"id":"VRTK.SnapDropZoneEventArgs","kind":"struct","accessibility":"public","name":"SnapDropZoneEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.SnapDropZoneEventHandler","kind":"delegate","accessibility":"public","name":"SnapDropZoneEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.TeleportEventHandler","kind":"delegate","accessibility":"public","name":"TeleportEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.TouchpadMovementAxisEventArgs","kind":"struct","accessibility":"public","name":"TouchpadMovementAxisEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.TouchpadMovementAxisEventHandler","kind":"delegate","accessibility":"public","name":"TouchpadMovementAxisEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.UICircle","kind":"class","accessibility":"public","name":"UICircle","summary":""},{"id":"VRTK.UIDraggableItemEventArgs","kind":"struct","accessibility":"public","name":"UIDraggableItemEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.UIDraggableItemEventHandler","kind":"delegate","accessibility":"public","name":"UIDraggableItemEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.UIPointerEventArgs","kind":"struct","accessibility":"public","name":"UIPointerEventArgs","summary":"<p>Event Payload</p>"},{"id":"VRTK.UIPointerEventHandler","kind":"delegate","accessibility":"public","name":"UIPointerEventHandler","summary":"<p>Event Payload</p>"},{"id":"VRTK.VRTK_AdaptiveQuality","kind":"class","accessibility":"public","name":"VRTK_AdaptiveQuality","summary":"<p>Adaptive Quality dynamically changes rendering settings to maintain VR framerate while maximizing GPU utilization.</p>"},{"id":"VRTK.VRTK_AdaptiveQualityEditor","kind":"class","accessibility":"public","name":"VRTK_AdaptiveQualityEditor","summary":""},{"id":"VRTK.VRTK_BaseObjectControlAction","kind":"class","accessibility":"public","name":"VRTK_BaseObjectControlAction","summary":"<p>The Base Object Control Action script is an abstract class that all object control action scripts inherit.</p>"},{"id":"VRTK.VRTK_BasePointer","kind":"class","accessibility":"public","name":"VRTK_BasePointer","summary":"<p>This abstract class provides any game pointer the ability to know the state of the implemented pointer.</p>"},{"id":"VRTK.VRTK_BasePointerRenderer","kind":"class","accessibility":"public","name":"VRTK_BasePointerRenderer","summary":"<p>The Base Pointer Renderer script is an abstract class that handles the set up and operation of how a pointer renderer works.</p>"},{"id":"VRTK.VRTK_BasicTeleport","kind":"class","accessibility":"public","name":"VRTK_BasicTeleport","summary":"<p>The basic teleporter updates the user's x/z position in the game world to the position of a Base Pointer's tip location which is set via the <code>DestinationMarkerSet</code> event.</p>"},{"id":"VRTK.VRTK_BezierPointer","kind":"class","accessibility":"public","name":"VRTK_BezierPointer","summary":"<p>The Bezier Pointer emits a curved line (made out of game objects) from the end of the attached object to a point on a ground surface (at any height).</p>"},{"id":"VRTK.VRTK_BezierPointerRenderer","kind":"class","accessibility":"public","name":"VRTK_BezierPointerRenderer","summary":"<p>The Bezier Pointer Renderer emits a curved line (made out of game objects) from the end of the attached object to a point on a ground surface (at any height).</p>"},{"id":"VRTK.VRTK_BodyPhysics","kind":"class","accessibility":"public","name":"VRTK_BodyPhysics","summary":"<p>The body physics script deals with how a user's body in the scene reacts to world physics and how to handle drops.</p>"},{"id":"VRTK.VRTK_Button","kind":"class","accessibility":"public","name":"VRTK_Button","summary":"<p>Attaching the script to a game object will allow the user to interact with it as if it were a push button. The direction into which the button should be pushable can be freely set and auto-detection is supported. Since this is physics-based there needs to be empty space in the push direction so that the button can move.</p>"},{"id":"VRTK.VRTK_ButtonControl","kind":"class","accessibility":"public","name":"VRTK_ButtonControl","summary":"<p>The ability to control an object with a button press on a given button to control a specified direction.</p>"},{"id":"VRTK.VRTK_Chest","kind":"class","accessibility":"public","name":"VRTK_Chest","summary":"<p>Transforms a game object into a chest with a lid. The direction can be auto-detected with very high reliability or set manually.</p>"},{"id":"VRTK.VRTK_CollisionTracker","kind":"class","accessibility":"public","name":"VRTK_CollisionTracker","summary":""},{"id":"VRTK.VRTK_ConsoleViewer","kind":"class","accessibility":"public","name":"VRTK_ConsoleViewer","summary":"<p>This canvas adds the unity console log to a world game object. To use the prefab, it simply needs to be placed into the scene and it will be visible in world space. It's also possible to child it to other objects such as the controller so it can track where the user is.</p>"},{"id":"VRTK.VRTK_ContentHandler","kind":"class","accessibility":"public","name":"VRTK_ContentHandler","summary":"<p>Manages objects defined as content. When taking out an object from a drawer and closing the drawer this object would otherwise disappear even if outside the drawer.</p>"},{"id":"VRTK.VRTK_Control","kind":"class","accessibility":"public","name":"VRTK_Control","summary":"<p>All 3D controls extend the <code>VRTK_Control</code> abstract class which provides a default set of methods and events that all of the subsequent controls expose.</p>"},{"id":"VRTK.VRTK_ControllerActions","kind":"class","accessibility":"public","name":"VRTK_ControllerActions","summary":"<p>The Controller Actions script provides helper methods to deal with common controller actions. It deals with actions that can be done to the controller.</p>"},{"id":"VRTK.VRTK_ControllerElementHighlighters","kind":"class","accessibility":"public","name":"VRTK_ControllerElementHighlighters","summary":""},{"id":"VRTK.VRTK_ControllerEvents","kind":"class","accessibility":"public","name":"VRTK_ControllerEvents","summary":"<p>The Controller Events script deals with events that the game controller is sending out.</p>"},{"id":"VRTK.VRTK_ControllerHaptics","kind":"class","accessibility":"public","name":"VRTK_ControllerHaptics","summary":"<p>The Controller Haptics scripts are a collection of static methods for calling haptic functions on a given controller.</p>"},{"id":"VRTK.VRTK_ControllerHighlighter","kind":"class","accessibility":"public","name":"VRTK_ControllerHighlighter","summary":"<p>The Controller Highlighter script provides methods to deal with highlighting controller elements.</p>"},{"id":"VRTK.VRTK_ControllerModelElementPaths","kind":"class","accessibility":"public","name":"VRTK_ControllerModelElementPaths","summary":""},{"id":"VRTK.VRTK_ControllerReference","kind":"class","accessibility":"public","name":"VRTK_ControllerReference","summary":""},{"id":"VRTK.VRTK_ControllerRigidbodyActivator","kind":"class","accessibility":"public","name":"VRTK_ControllerRigidbodyActivator","summary":"<p>This adds a simple trigger collider volume that when a controller enters will enable the rigidbody on the controller.</p>"},{"id":"VRTK.VRTK_ControllerTooltips","kind":"class","accessibility":"public","name":"VRTK_ControllerTooltips","summary":"<p>This adds a collection of Object Tooltips to the Controller that give information on what the main controller buttons may do. To add the prefab, it just needs to be added as a child of the relevant alias controller GameObject.</p>"},{"id":"VRTK.VRTK_CurveGenerator","kind":"class","accessibility":"public","name":"VRTK_CurveGenerator","summary":""},{"id":"VRTK.VRTK_CustomRaycast","kind":"class","accessibility":"public","name":"VRTK_CustomRaycast","summary":"<p>A Custom Raycast allows to specify custom options for a Physics.Raycast.</p>"},{"id":"VRTK.VRTK_DashTeleport","kind":"class","accessibility":"public","name":"VRTK_DashTeleport","summary":"<p>The dash teleporter extends the height adjust teleporter and allows to have the user's position dashing to a new teleport location.</p>"},{"id":"VRTK.VRTK_DestinationMarker","kind":"class","accessibility":"public","name":"VRTK_DestinationMarker","summary":"<p>This abstract class provides the ability to emit events of destination markers within the game world. It can be useful for tagging locations for specific purposes such as teleporting.</p>"},{"id":"VRTK.VRTK_DestinationPoint","kind":"class","accessibility":"public","name":"VRTK_DestinationPoint","summary":"<p>The Destination Point allows for a specific scene marker that can be teleported to.</p>"},{"id":"VRTK.VRTK_DeviceFinder","kind":"class","accessibility":"public","name":"VRTK_DeviceFinder","summary":"<p>The Device Finder offers a collection of static methods that can be called to find common game devices such as the headset or controllers, or used to determine key information about the connected devices.</p>"},{"id":"VRTK.VRTK_Door","kind":"class","accessibility":"public","name":"VRTK_Door","summary":"<p>Transforms a game object into a door with an optional handle attached to an optional frame. The direction can be freely set and also very reliably auto-detected.</p>"},{"id":"VRTK.VRTK_Drawer","kind":"class","accessibility":"public","name":"VRTK_Drawer","summary":"<p>Transforms a game object into a drawer. The direction can be freely set and also auto-detected with very high reliability.</p>"},{"id":"VRTK.VRTK_EditorUtilities","kind":"class","accessibility":"public","name":"VRTK_EditorUtilities","summary":""},{"id":"VRTK.VRTK_EventSystem","kind":"class","accessibility":"public","name":"VRTK_EventSystem","summary":""},{"id":"VRTK.VRTK_FramesPerSecondViewer","kind":"class","accessibility":"public","name":"VRTK_FramesPerSecondViewer","summary":"<p>This canvas adds a frames per second text element to the headset. To use the prefab it must be placed into the scene then the headset camera needs attaching to the canvas:</p>"},{"id":"VRTK.VRTK_HeadsetCollider","kind":"class","accessibility":"public","name":"VRTK_HeadsetCollider","summary":""},{"id":"VRTK.VRTK_HeadsetCollision","kind":"class","accessibility":"public","name":"VRTK_HeadsetCollision","summary":"<p>The purpose of the Headset Collision is to detect when the user's VR headset collides with another game object.</p>"},{"id":"VRTK.VRTK_HeadsetCollisionFade","kind":"class","accessibility":"public","name":"VRTK_HeadsetCollisionFade","summary":"<p>The purpose of the Headset Collision Fade is to detect when the user's VR headset collides with another game object and fades the screen to a solid colour.</p>"},{"id":"VRTK.VRTK_HeadsetControllerAware","kind":"class","accessibility":"public","name":"VRTK_HeadsetControllerAware","summary":"<p>The purpose of Headset Controller Aware is to allow the headset to know if something is blocking the path between the headset and controllers and to know if the headset is looking at a controller.</p>"},{"id":"VRTK.VRTK_HeadsetFade","kind":"class","accessibility":"public","name":"VRTK_HeadsetFade","summary":"<p>The purpose of the Headset Fade is to change the colour of the headset view to a specified colour over a given duration and to also unfade it back to being transparent.</p>"},{"id":"VRTK.VRTK_HeightAdjustTeleport","kind":"class","accessibility":"public","name":"VRTK_HeightAdjustTeleport","summary":"<p>The height adjust teleporter extends the basic teleporter and allows for the y position of the user's position to be altered based on whether the teleport location is on top of another object.</p>"},{"id":"VRTK.VRTK_HipTracking","kind":"class","accessibility":"public","name":"VRTK_HipTracking","summary":"<p>Hip Tracking attempts to reasonably track hip position in the absence of a hip position sensor.</p>"},{"id":"VRTK.VRTK_IndependentRadialMenuController","kind":"class","accessibility":"public","name":"VRTK_IndependentRadialMenuController","summary":"<p>This script inherited from <code>RadialMenuController</code> and therefore can be used instead of <code>RadialMenuController</code> to allow the RadialMenu to be anchored to any object, not just a controller. The RadialMenu will show when a controller is near the object and the buttons can be clicked with the <code>Use Alias</code> button. The menu also automatically rotates towards the user.</p>"},{"id":"VRTK.VRTK_InteractableObject","kind":"class","accessibility":"public","name":"VRTK_InteractableObject","summary":"<p>The Interactable Object script is attached to any game object that is required to be interacted with (e.g. via the controllers).</p>"},{"id":"VRTK.VRTK_InteractControllerAppearance","kind":"class","accessibility":"public","name":"VRTK_InteractControllerAppearance","summary":"<p>The Interact Controller Appearance script is attached on the same GameObject as an Interactable Object script and is used to determine whether the controller model should be visible or hidden on touch, grab or use.</p>"},{"id":"VRTK.VRTK_InteractGrab","kind":"class","accessibility":"public","name":"VRTK_InteractGrab","summary":"<p>The Interact Grab script is attached to a Controller object and requires the <code>VRTK_ControllerEvents</code> script to be attached as it uses this for listening to the controller button events for grabbing and releasing interactable game objects.</p>"},{"id":"VRTK.VRTK_InteractHaptics","kind":"class","accessibility":"public","name":"VRTK_InteractHaptics","summary":"<p>The Interact Haptics script is attached on the same GameObject as an Interactable Object script and provides controller haptics on touch, grab and use of the object.</p>"},{"id":"VRTK.VRTK_InteractHapticsEditor","kind":"class","accessibility":"public","name":"VRTK_InteractHapticsEditor","summary":""},{"id":"VRTK.VRTK_InteractTouch","kind":"class","accessibility":"public","name":"VRTK_InteractTouch","summary":"<p>The Interact Touch script is usually applied to a Controller and provides a collider to know when the controller is touching something.</p>"},{"id":"VRTK.VRTK_InteractUse","kind":"class","accessibility":"public","name":"VRTK_InteractUse","summary":"<p>The Interact Use script is attached to a Controller object and requires the <code>VRTK_ControllerEvents</code> script to be attached as it uses this for listening to the controller button events for using and stop using interactable game objects.</p>"},{"id":"VRTK.VRTK_Knob","kind":"class","accessibility":"public","name":"VRTK_Knob","summary":"<p>Attaching the script to a game object will allow the user to interact with it as if it were a radial knob. The direction can be freely set.</p>"},{"id":"VRTK.VRTK_Lever","kind":"class","accessibility":"public","name":"VRTK_Lever","summary":"<p>Attaching the script to a game object will allow the user to interact with it as if it were a lever. The direction can be freely set.</p>"},{"id":"VRTK.VRTK_Logger","kind":"class","accessibility":"public","name":"VRTK_Logger","summary":""},{"id":"VRTK.VRTK_MoveInPlace","kind":"class","accessibility":"public","name":"VRTK_MoveInPlace","summary":"<p>Move In Place allows the user to move the play area by calculating the y-movement of the user's headset and/or controllers. The user is propelled forward the more they are moving. This simulates moving in game by moving in real life.</p>"},{"id":"VRTK.VRTK_ObjectAppearance","kind":"class","accessibility":"public","name":"VRTK_ObjectAppearance","summary":"<p>The Object Appearance script provides a collection of static methods for controlling the appearance of a GameObject.</p>"},{"id":"VRTK.VRTK_ObjectAutoGrab","kind":"class","accessibility":"public","name":"VRTK_ObjectAutoGrab","summary":"<p>It is possible to automatically grab an Interactable Object to a specific controller by applying the Object Auto Grab script to the controller that the object should be grabbed by default.</p>"},{"id":"VRTK.VRTK_ObjectCache","kind":"class","accessibility":"public","name":"VRTK_ObjectCache","summary":""},{"id":"VRTK.VRTK_ObjectControl","kind":"class","accessibility":"public","name":"VRTK_ObjectControl","summary":"<p>An abstract class to provide a mechanism to control an object based on controller input.</p>"},{"id":"VRTK.VRTK_ObjectFollow","kind":"class","accessibility":"public","name":"VRTK_ObjectFollow","summary":"<p>Abstract class that allows to change one game object's properties to follow another game object.</p>"},{"id":"VRTK.VRTK_ObjectSetup","kind":"class","accessibility":"public","name":"VRTK_ObjectSetup","summary":""},{"id":"VRTK.VRTK_ObjectTooltip","kind":"class","accessibility":"public","name":"VRTK_ObjectTooltip","summary":"<p>This adds a UI element into the World Space that can be used to provide additional information about an object by providing a piece of text with a line drawn to a destination point.</p>"},{"id":"VRTK.VRTK_ObjectTouchAutoInteract","kind":"class","accessibility":"public","name":"VRTK_ObjectTouchAutoInteract","summary":"<p>The Object Touch Auto Interact script allows grab or use interactions on an object to automatically happen upon touching the interactable object.</p>"},{"id":"VRTK.VRTK_PanelMenuController","kind":"class","accessibility":"public","name":"VRTK_PanelMenuController","summary":"<p>Purpose: top-level controller class to handle the display of up to four child PanelMenuItemController items which are displayed as a canvas UI panel.</p>"},{"id":"VRTK.VRTK_PanelMenuItemController","kind":"class","accessibility":"public","name":"VRTK_PanelMenuItemController","summary":"<p>Purpose: panel item controller class that intercepts the controller events sent from a [PanelMenuController] and passes them onto additional custom event subscriber scripts, which then carry out the required custom UI actions.</p>"},{"id":"VRTK.VRTK_PlayAreaCollider","kind":"class","accessibility":"public","name":"VRTK_PlayAreaCollider","summary":""},{"id":"VRTK.VRTK_PlayAreaCursor","kind":"class","accessibility":"public","name":"VRTK_PlayAreaCursor","summary":"<p>The Play Area Cursor is used in conjunction with a Pointer script and displays a representation of the play area where the pointer cursor hits.</p>"},{"id":"VRTK.VRTK_PlayerClimb","kind":"class","accessibility":"public","name":"VRTK_PlayerClimb","summary":"<p>The Player Climb allows player movement based on grabbing of <code>VRTK_InteractableObject</code> objects that have a <code>Climbable</code> grab attach script. Because it works by grabbing, each controller should have a <code>VRTK_InteractGrab</code> and <code>VRTK_InteractTouch</code> component attached.</p>"},{"id":"VRTK.VRTK_PlayerObject","kind":"class","accessibility":"public","name":"VRTK_PlayerObject","summary":""},{"id":"VRTK.VRTK_Pointer","kind":"class","accessibility":"public","name":"VRTK_Pointer","summary":"<p>The VRTK Pointer class forms the basis of being able to emit a pointer from a game object (e.g. controller).</p>"},{"id":"VRTK.VRTK_PointerDirectionIndicator","kind":"class","accessibility":"public","name":"VRTK_PointerDirectionIndicator","summary":"<p>The Pointer Direction Indicator is used to determine a given world rotation that can be used by a Destiantion Marker.</p>"},{"id":"VRTK.VRTK_PolicyList","kind":"class","accessibility":"public","name":"VRTK_PolicyList","summary":"<p>The Policy List allows to create a list of either tag names, script names or layer names that can be checked against to see if another operation is permitted.</p>"},{"id":"VRTK.VRTK_PolicyListEditor","kind":"class","accessibility":"public","name":"VRTK_PolicyListEditor","summary":""},{"id":"VRTK.VRTK_PositionRewind","kind":"class","accessibility":"public","name":"VRTK_PositionRewind","summary":"<p>The Position Rewind script is used to reset the user back to a good known standing position upon receiving a headset collision event.</p>"},{"id":"VRTK.VRTK_RadialMenu","kind":"class","accessibility":"public","name":"VRTK_RadialMenu","summary":"<p>This adds a UI element into the world space that can be dropped into a Controller object and used to create and use Radial Menus from the touchpad.</p>"},{"id":"VRTK.VRTK_RadialMenuController","kind":"class","accessibility":"public","name":"VRTK_RadialMenuController","summary":"<p>This adds a UI element into the world space that can be dropped into a Controller object and used to create and use Radial Menus from the touchpad.</p>"},{"id":"VRTK.VRTK_RadialMenuEditor","kind":"class","accessibility":"public","name":"VRTK_RadialMenuEditor","summary":""},{"id":"VRTK.VRTK_RigidbodyFollow","kind":"class","accessibility":"public","name":"VRTK_RigidbodyFollow","summary":"<p>Changes one game object's rigidbody to follow another game object's rigidbody.</p>"},{"id":"VRTK.VRTK_RoomExtender","kind":"class","accessibility":"public","name":"VRTK_RoomExtender","summary":"<p>This script allows the playArea to move with the user. The play area is only moved when at the edge of a defined circle.</p>"},{"id":"VRTK.VRTK_RoomExtender_PlayAreaGizmo","kind":"class","accessibility":"public","name":"VRTK_RoomExtender_PlayAreaGizmo","summary":""},{"id":"VRTK.VRTK_RotateObjectControlAction","kind":"class","accessibility":"public","name":"VRTK_RotateObjectControlAction","summary":"<p>The Rotate Object Control Action script is used to rotate the controlled GameObject around the up vector when changing the axis.</p>"},{"id":"VRTK.VRTK_ScreenFade","kind":"class","accessibility":"public","name":"VRTK_ScreenFade","summary":""},{"id":"VRTK.VRTK_SDK_Bridge","kind":"class","accessibility":"public","name":"VRTK_SDK_Bridge","summary":""},{"id":"VRTK.VRTK_SDKInfo","kind":"class","accessibility":"public","name":"VRTK_SDKInfo","summary":"<p>Holds all the info necessary to describe an SDK.</p>"},{"id":"VRTK.VRTK_SDKManager","kind":"class","accessibility":"public","name":"VRTK_SDKManager","summary":"<p>The SDK Manager script provides configuration of supported SDKs and manages a list of <a href=\"#/type/VRTK.VRTK_SDKSetup/index\">VRTK_SDKSetup</a> s to use.</p>"},{"id":"VRTK.VRTK_SDKManagerEditor","kind":"class","accessibility":"public","name":"VRTK_SDKManagerEditor","summary":""},{"id":"VRTK.VRTK_SDKObjectAlias","kind":"class","accessibility":"public","name":"VRTK_SDKObjectAlias","summary":"<p>The GameObject that the SDK Object Alias script is applied to will become a child of the selected SDK Object.</p>"},{"id":"VRTK.VRTK_SDKSetup","kind":"class","accessibility":"public","name":"VRTK_SDKSetup","summary":"<p>The SDK Setup describes a list of SDKs and game objects to use.</p>"},{"id":"VRTK.VRTK_SDKSetupEditor","kind":"class","accessibility":"public","name":"VRTK_SDKSetupEditor","summary":""},{"id":"VRTK.VRTK_SDKSetupSwitcher","kind":"class","accessibility":"public","name":"VRTK_SDKSetupSwitcher","summary":"<p>The SDK Setup Switcher adds a GUI overlay to allow switching the loaded VRTK_SDKSetup of the the current VRTK_SDKManager.</p>"},{"id":"VRTK.VRTK_SDKTransformModifiers","kind":"class","accessibility":"public","name":"VRTK_SDKTransformModifiers","summary":""},{"id":"VRTK.VRTK_SDKTransformModify","kind":"class","accessibility":"public","name":"VRTK_SDKTransformModify","summary":"<p>The SDK Transform Modify can be used to change a transform orientation at runtime based on the currently used SDK or SDK controller.</p>"},{"id":"VRTK.VRTK_SharedMethods","kind":"class","accessibility":"public","name":"VRTK_SharedMethods","summary":"<p>The Shared Methods script is a collection of reusable static methods that are used across a range of different scripts.</p>"},{"id":"VRTK.VRTK_SimplePointer","kind":"class","accessibility":"public","name":"VRTK_SimplePointer","summary":"<p>The Simple Pointer emits a coloured beam from the end of the object it is attached to and simulates a laser beam.</p>"},{"id":"VRTK.VRTK_Simulator","kind":"class","accessibility":"public","name":"VRTK_Simulator","summary":"<p>To test a scene it is often necessary to use the headset to move to a location. This increases turn-around times and can become cumbersome.</p>"},{"id":"VRTK.VRTK_SlideObjectControlAction","kind":"class","accessibility":"public","name":"VRTK_SlideObjectControlAction","summary":"<p>The Slide Object Control Action script is used to slide the controlled GameObject around the scene when changing the axis.</p>"},{"id":"VRTK.VRTK_Slider","kind":"class","accessibility":"public","name":"VRTK_Slider","summary":"<p>Attaching the script to a game object will allow the user to interact with it as if it were a horizontal or vertical slider. The direction can be freely set and auto-detection is supported.</p>"},{"id":"VRTK.VRTK_SnapDropZone","kind":"class","accessibility":"public","name":"VRTK_SnapDropZone","summary":"<p>This sets up a predefined zone where an existing interactable object can be dropped and upon dropping it snaps to the set snap drop zone transform position, rotation and scale.</p>"},{"id":"VRTK.VRTK_SnapRotateObjectControlAction","kind":"class","accessibility":"public","name":"VRTK_SnapRotateObjectControlAction","summary":"<p>The Snap Rotate Object Control Action script is used to snap rotate the controlled GameObject around the up vector when changing the axis.</p>"},{"id":"VRTK.VRTK_SpringLever","kind":"class","accessibility":"public","name":"VRTK_SpringLever","summary":"<p>This script extends VRTK_Lever to add spring force toward whichever end of the lever's range it is closest to.</p>"},{"id":"VRTK.VRTK_StraightPointerRenderer","kind":"class","accessibility":"public","name":"VRTK_StraightPointerRenderer","summary":"<p>The Straight Pointer Renderer emits a coloured beam from the end of the object it is attached to and simulates a laser beam.</p>"},{"id":"VRTK.VRTK_SupportInfoWindow","kind":"class","accessibility":"public","name":"VRTK_SupportInfoWindow","summary":""},{"id":"VRTK.VRTK_TeleportDisableOnControllerObscured","kind":"class","accessibility":"public","name":"VRTK_TeleportDisableOnControllerObscured","summary":"<p>The purpose of the Teleport Disable On Controller Obscured script is to detect when the headset does not have a line of sight to the controllers and prevent teleportation from working. This is to ensure that if a user is clipping their controllers through a wall then they cannot teleport to an area beyond the wall.</p>"},{"id":"VRTK.VRTK_TeleportDisableOnHeadsetCollision","kind":"class","accessibility":"public","name":"VRTK_TeleportDisableOnHeadsetCollision","summary":"<p>The purpose of the Teleport Disable On Headset Collision script is to detect when the headset is colliding with a valid object and prevent teleportation from working. This is to ensure that if a user is clipping their head into a wall then they cannot teleport to an area beyond the wall.</p>"},{"id":"VRTK.VRTK_TouchpadControl","kind":"class","accessibility":"public","name":"VRTK_TouchpadControl","summary":"<p>The ability to control an object with the touchpad based on the position of the finger on the touchpad axis.</p>"},{"id":"VRTK.VRTK_TouchpadMovement","kind":"class","accessibility":"public","name":"VRTK_TouchpadMovement","summary":"<p>Adds the ability to move and rotate the play area and the player by using the touchpad.</p>"},{"id":"VRTK.VRTK_TouchpadWalking","kind":"class","accessibility":"public","name":"VRTK_TouchpadWalking","summary":"<p>The ability to move the play area around the game world by sliding a finger over the touchpad is achieved using this script.</p>"},{"id":"VRTK.VRTK_TrackedController","kind":"class","accessibility":"public","name":"VRTK_TrackedController","summary":""},{"id":"VRTK.VRTK_TrackedHeadset","kind":"class","accessibility":"public","name":"VRTK_TrackedHeadset","summary":""},{"id":"VRTK.VRTK_TransformFollow","kind":"class","accessibility":"public","name":"VRTK_TransformFollow","summary":"<p>Changes one game object's transform to follow another game object's transform.</p>"},{"id":"VRTK.VRTK_UICanvas","kind":"class","accessibility":"public","name":"VRTK_UICanvas","summary":"<p>The UI Canvas is used to denote which World Canvases are interactable by a UI Pointer.</p>"},{"id":"VRTK.VRTK_UIDraggableItem","kind":"class","accessibility":"public","name":"VRTK_UIDraggableItem","summary":"<p>The UI Draggable item will make any UI element draggable on the canvas.</p>"},{"id":"VRTK.VRTK_UIDropZone","kind":"class","accessibility":"public","name":"VRTK_UIDropZone","summary":"<p>A UI Drop Zone is applied to any UI element that is to be considered a valid parent for any UI Draggable element to be dropped into it.</p>"},{"id":"VRTK.VRTK_UIGraphicRaycaster","kind":"class","accessibility":"public","name":"VRTK_UIGraphicRaycaster","summary":""},{"id":"VRTK.VRTK_UIPointer","kind":"class","accessibility":"public","name":"VRTK_UIPointer","summary":"<p>The UI Pointer provides a mechanism for interacting with Unity UI elements on a world canvas. The UI Pointer can be attached to any game object the same way in which a Base Pointer can be and the UI Pointer also requires a controller to initiate the pointer activation and pointer click states.</p>"},{"id":"VRTK.VRTK_UIPointerAutoActivator","kind":"class","accessibility":"public","name":"VRTK_UIPointerAutoActivator","summary":""},{"id":"VRTK.VRTK_VRInputModule","kind":"class","accessibility":"public","name":"VRTK_VRInputModule","summary":""},{"id":"VRTK.VRTK_WarpObjectControlAction","kind":"class","accessibility":"public","name":"VRTK_WarpObjectControlAction","summary":"<p>The Warp Object Control Action script is used to warp the controlled GameObject a given distance when changing the axis.</p>"},{"id":"VRTK.VRTK_Wheel","kind":"class","accessibility":"public","name":"VRTK_Wheel","summary":"<p>Attaching the script to a game object will allow the user to interact with it as if it were a spinnable wheel.</p>"},{"id":"VRTK.VRTKTrackedControllerEventArgs","kind":"struct","accessibility":"public","name":"VRTKTrackedControllerEventArgs","summary":""},{"id":"VRTK.VRTKTrackedControllerEventHandler","kind":"delegate","accessibility":"public","name":"VRTKTrackedControllerEventHandler","summary":""}]}}